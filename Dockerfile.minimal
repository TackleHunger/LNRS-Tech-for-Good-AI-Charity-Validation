# Security-optimized Minimal Dockerfile for Tackle Hunger Charity Validation
# 
# This is a simplified version with maximum security using Alpine Linux

FROM python:3.13-alpine

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 

# Set working directory
WORKDIR /app

# Install minimal system dependencies with Alpine package manager
RUN apk update && \
    apk upgrade && \
    apk add --no-cache \
    curl \
    ca-certificates \
    && rm -rf /var/cache/apk/*

# Create non-root user for security early
RUN addgroup -g 1000 tacklehunger && \
    adduser -D -s /bin/sh -u 1000 -G tacklehunger tacklehunger

# Copy project files with proper ownership
COPY --chown=tacklehunger:tacklehunger src/ ./src/
COPY --chown=tacklehunger:tacklehunger tests/ ./tests/
COPY --chown=tacklehunger:tacklehunger scripts/ ./scripts/
COPY --chown=tacklehunger:tacklehunger docs/ ./docs/
COPY --chown=tacklehunger:tacklehunger .env.example .
COPY --chown=tacklehunger:tacklehunger pytest.ini .

# Create .env from example if it doesn't exist
RUN if [ ! -f .env ]; then cp .env.example .env && chown tacklehunger:tacklehunger .env; fi

# Switch to non-root user
USER tacklehunger

# Set Python path to include src directory
ENV PYTHONPATH="/app/src"

# Health check to ensure container is working
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python3 -c "import sys; print('Container healthy')" || exit 1

# Default command shows the environment is ready
CMD ["python3", "-c", "print('Tackle Hunger Docker environment ready!'); print('Install requirements: pip install requests pydantic python-dotenv pytest'); print('Run tests: python -m pytest')"]